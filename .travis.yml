cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

before_script:
  - echo "SENTRY_DSN=$SENTRY_DSN" >> .env
  - echo "GOOGLE_ANALYTICS_ID=$GOOGLE_ANALYTICS_ID" >> .env

jobs:
  include:
    - stage: test
      os: osx
      osx_image: xcode11
      language: node_js
      node_js: 10
      before_script:
        - REPORTER_OS_NAME=$([ "$TRAVIS_OS_NAME" = "linux" ] && echo "linux" || echo "darwin")
        - curl -L "https://codeclimate.com/downloads/test-reporter/test-reporter-latest-${REPORTER_OS_NAME}-amd64" > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script: npm run build -- --mac
      after_script:
        - sudo sed -i -e "s|^SF:/project|SF:$(pwd)|" coverage/lcov.info
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    - stage: build
      os: osx
      osx_image: xcode11
      language: node_js
      node_js: 10
      if: branch = master AND type = push
      script: npm run build -- --mac

    - stage: build
      os: linux
      services: docker
      language: generic
      if: branch = master AND type = push
      script:
        - |
          docker run --rm \
          -e ELECTRON_CACHE=$HOME/.cache/electron \
          -e ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder \
          -e CI=$CI \
          -e GH_TOKEN=$GH_TOKEN \
          -v ${PWD}:/project \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:wine \
          /bin/bash -c "\
            npm install && \
            npm run build -- --linux --win
          "
